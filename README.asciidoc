= tripover - journey planner for air and long-haul rail

An attempt to build a journey planner good at broad searches.
Like "from Germany to Java, depart next month, return one to two weeks later".
Aiming at the longer distance traveller searching for good trip options.

== Description
Aimed at transport options running on a schedule, with or without fares:
Flights, ferries, trains and buses.
For manageability anticipating only the longer-haul routes.
Results are to be selected on a handful of criteria, like price, travel time, number of stops or stopover time.

The planner is targeted to run on a server, accessed by local and web clients.

=== Goals

* flexible dates with broad departure and return date ranges
* include nearby airports or stations
* consider price, time, conditions or a combination
* real-time update changes and fare availability

=== Non-goals

* obtaining schedule and fare data
+
[small]#airline data is generally not publicly available#
+
[small]#arranging public transport data is a project in itself#
+

* booking+ticketing
+
[small]#only up-to-date fare availability#
+

* roads, door-to-door
+
[small]#consider only the scheduled trip#
+

* lightweigt edition
+
[small]#aim at higher system requirements#

== Status
Developing

* preliminary GTFS reader and 'external' readable network file format
* initial artificial network
* timetable handling
* Static connectivity matrix aka graph builing
* rudimentary local commandline client / server interface
* rudimentary route-only search

== Installation

Unless mentioned otherwise, actions below are to be run with the current dir at the project root.
The latter can be any dir that contains the source code.

=== Configure compilers

`./emka config`

Based on installed compilers, you are offered a selection.
Predefined options for a few common compilers are generated and written to +./config+

=== Review build options

edit +./config+ if needed. This is the output of the compiler selection above and contains the default build options.

edit +./cfg.h+ if needed. This file contains compile-time constants that you may want to revise.

=== Build server

`./emka`

This will compile and link the server +tripover+

=== Build client

Currently, the local commandline client does not need a build step

== Usage

=== artificial netowrk

Invoke the server without an existing network :

`./tripover -max-ports=500 -max-hops=500 -max-stops=2`

This will create a small artificial network, then enters a loop waiting for client requests.

=== GTFS feed

Prepare a GTFS feed by unpacking into any directory:

`mkdir data/seq && cd data/seq`

`wget http://translink.com.au/sites/default/files/assets/resources/about-translink/reporting-and-publications/open-data/gtfs/SEQ.zip?20141020`

`unzip SEQ`

`cd ../..`

Convert into tripover external format

`gtfstool import data/seq data`

Run tripover server with this network

`./tripover data`

Invoke the commandline client :

`./plantrip plan nambour bunya`

Currently, tripover only calculates a possible route, disregarding time or cost.

== Configuration

By default tripover reads its runtine configuration from +tripover.cfg+

After tripover has been run, the configuration in effect is written to +tripover.curcfg+

You can use the latter as a starting point for the former. It shows all defaults, as well as a short description.
 
== Author

Joris van der Geer


== Contributing

== License
This work is licensed under the Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License.
To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-nd/4.0/.
